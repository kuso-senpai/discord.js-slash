'use Strict'

const { SlashCommandOption } = require('discord.js');
const BaseManager = require('discord.js/src/managers/BaseManager');
const SlashCommand = require("../structures/SlashCommand")

/**
 * Manages API methods for users and stores their cache.
 * @extends {BaseManager}
 */
class SlashCommandsManager extends BaseManager {
    constructor(client, iterable) {
      super(client, iterable, SlashCommand);
    }
    
    /**
     * Der Cache von den Channels
     * @type {Collection<Snowflake, SlashCommand>}
     * @name SlashCommands#cache
     */

    add(data) {
      const existing = this.cache.get(data.id)
      if (existing) {
        if (existing._patch) existing._patch(data)
        return existing
      }

      let slashCommand = new SlashCommand(this.client, data.name, data.description, data.options, data)
      
      if (slashCommand) this.cache.set(slashCommand.id, slashCommand)
      return slashCommand
    }

    remove(id) {
      client.api.applications(client.user.id).commands(this.id).delete()
      this.cache.delete(id)
    }

    async fetch(id, cache = true, force = false) {
      if (!force) {
        const existing = this.cache.get(id);
        if (existing) return existing;
      }
  
      const data = await this.client.api.appliactions(this.client.user.id).commands(id).get();
      return this.add(data, cache);
    }

    async fetchAll() {
      return new Promise(async resolve => {
        const json = await this.client.api.applications(this.client.user.id).commands.get()
        for (const x in json)
          this.add(json[x])
        resolve()
      })
    }

    create = (data = {name: "", description: "", options: []}) => {
      return new Promise(resolve => resolve(this.add(data)))
    }

    get commandsJSON() {
      return this.client.api.applications(this.client.user.id).commands.get()
    }

    deleteAll = async () => {
      return new Promise(resolve => {
        this.cache.forEach(x => {console.log(x.name + " wird gel√∂scht"); x.delete()})
        resolve()
      })
    }

}

module.exports = SlashCommandsManager